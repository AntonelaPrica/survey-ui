{"__symbolic":"module","version":4,"metadata":{"SurveyModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":5,"character":1},"arguments":[{"declarations":[{"__symbolic":"reference","name":"SurveyComponent"}],"imports":[{"__symbolic":"reference","name":"ɵa"},{"__symbolic":"reference","name":"ɵb"}],"providers":[],"exports":[{"__symbolic":"reference","name":"SurveyComponent"}]}]}],"members":{}},"SurveyControlTitle":"title","SurveyControlQuestions":"questions","SurveyComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":9,"character":1},"arguments":[{"selector":"sv-survey","changeDetection":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectionStrategy","line":13,"character":21},"member":"OnPush"},"template":"<form *ngIf=\"formGroup\" [formGroup]=\"formGroup\">\r\n    <div>\r\n        <mat-form-field appearance=\"outline\">\r\n            <mat-label>Survey Title</mat-label>\r\n            <input matInput [formControlName]=\"titleControlName\" [readonly]=\"!isEditMode\">\r\n        </mat-form-field>\r\n\r\n        <button mat-raised-button color=\"primary\" class=\"left-margin\" (click)=\"onAddQuestion()\" *ngIf=\"isEditMode\">\r\n            Add Question\r\n        </button>\r\n    </div>\r\n\r\n    <div *ngFor=\"let question of questionControlArray\" class=\"survey-question-container\">\r\n        <mat-divider class=\"grid-span-two\"></mat-divider>\r\n        <sv-survey-question [formGroup]=\"question\" [isEditMode]=\"isEditMode\"></sv-survey-question>\r\n\r\n        <button class=\"survey-question-button\" mat-fab color=\"primary\" *ngIf=\"isEditMode\">\r\n            <mat-icon>delete</mat-icon>\r\n        </button>\r\n    </div>\r\n\r\n    <div>\r\n        <button mat-raised-button color=\"primary\" (click)=\"onSubmit()\">\r\n            Submit\r\n        </button>\r\n    </div>\r\n</form>\r\n","styles":[".left-margin{margin-left:5%}.survey-question-container{display:grid;grid-template-columns:1fr .1fr;grid-gap:20px}.survey-question-button{justify-self:center;align-self:start}.grid-span-two{grid-column:1/span 2}"]}]}],"members":{"survey":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":16,"character":5}}]}],"isEditMode":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":17,"character":5}}]}],"submit":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":18,"character":5}}]}],"ngOnInit":[{"__symbolic":"method"}],"onAddQuestion":[{"__symbolic":"method"}],"onSubmit":[{"__symbolic":"method"}]}},"Survey":{"__symbolic":"interface"},"SurveyForm":{"__symbolic":"interface"},"ɵa":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":14,"character":1},"arguments":[{"imports":[{"__symbolic":"reference","module":"@angular/forms","name":"ReactiveFormsModule","line":16,"character":8},{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":17,"character":8},{"__symbolic":"reference","module":"@angular/platform-browser/animations","name":"BrowserAnimationsModule","line":18,"character":8},{"__symbolic":"reference","module":"@angular/platform-browser/animations","name":"NoopAnimationsModule","line":19,"character":8},{"__symbolic":"reference","module":"@angular/material/radio","name":"MatRadioModule","line":20,"character":8},{"__symbolic":"reference","module":"@angular/material/form-field","name":"MatFormFieldModule","line":21,"character":8},{"__symbolic":"reference","module":"@angular/material/input","name":"MatInputModule","line":22,"character":8},{"__symbolic":"reference","module":"@angular/material/icon","name":"MatIconModule","line":23,"character":8},{"__symbolic":"reference","module":"@angular/material/button","name":"MatButtonModule","line":24,"character":8},{"__symbolic":"reference","module":"@angular/material/checkbox","name":"MatCheckboxModule","line":25,"character":8},{"__symbolic":"reference","module":"@angular/material/select","name":"MatSelectModule","line":26,"character":8},{"__symbolic":"reference","module":"@angular/material/divider","name":"MatDividerModule","line":27,"character":8}],"exports":[{"__symbolic":"reference","module":"@angular/forms","name":"ReactiveFormsModule","line":30,"character":8},{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":31,"character":8},{"__symbolic":"reference","module":"@angular/platform-browser/animations","name":"BrowserAnimationsModule","line":32,"character":8},{"__symbolic":"reference","module":"@angular/platform-browser/animations","name":"NoopAnimationsModule","line":33,"character":8},{"__symbolic":"reference","module":"@angular/material/radio","name":"MatRadioModule","line":34,"character":8},{"__symbolic":"reference","module":"@angular/material/form-field","name":"MatFormFieldModule","line":35,"character":8},{"__symbolic":"reference","module":"@angular/material/input","name":"MatInputModule","line":36,"character":8},{"__symbolic":"reference","module":"@angular/material/icon","name":"MatIconModule","line":37,"character":8},{"__symbolic":"reference","module":"@angular/material/button","name":"MatButtonModule","line":38,"character":8},{"__symbolic":"reference","module":"@angular/material/checkbox","name":"MatCheckboxModule","line":39,"character":8},{"__symbolic":"reference","module":"@angular/material/select","name":"MatSelectModule","line":40,"character":8},{"__symbolic":"reference","module":"@angular/material/divider","name":"MatDividerModule","line":41,"character":8}]}]}],"members":{}},"ɵb":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":9,"character":1},"arguments":[{"imports":[{"__symbolic":"reference","name":"ɵa"},{"__symbolic":"reference","name":"ɵc"},{"__symbolic":"reference","name":"ɵe"}],"declarations":[{"__symbolic":"reference","name":"ɵg"}],"exports":[{"__symbolic":"reference","name":"ɵg"}]}]}],"members":{}},"ɵc":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":4,"character":1},"arguments":[{"imports":[{"__symbolic":"reference","name":"ɵa"}],"declarations":[{"__symbolic":"reference","name":"ɵd"}],"exports":[{"__symbolic":"reference","name":"ɵd"}]}]}],"members":{}},"ɵd":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":8,"character":1},"arguments":[{"selector":"sv-question-variants","changeDetection":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectionStrategy","line":12,"character":21},"member":"OnPush"},"template":"<form *ngIf=\"formGroup\" [formGroup]=\"formGroup\">\r\n    <ng-container *ngIf=\"optionsControlArray\">\r\n        <div class=\"option-container\">\r\n            <div></div>\r\n            <div class=\"centered-option\"><h4>Options</h4></div>\r\n            <button mat-fab color=\"primary\" (click)=\"onAddOption()\" *ngIf=\"isEditMode\">\r\n                <mat-icon>add</mat-icon>\r\n            </button>\r\n        </div>\r\n        <div *ngFor=\"let optionControl of optionsControlArray; let i = index \">\r\n            <form *ngIf=\"optionControl\" [formGroup]=\"optionControl\" class=\"option-container top-padded\">\r\n                <mat-checkbox [formControlName]=\"subControlRadioName\" class=\"centered-option\"\r\n                              (click)=\"onCheckboxClicked(i)\"></mat-checkbox>\r\n                <mat-form-field class=\"centered-option\" appearance=\"outline\">\r\n                    <mat-label *ngIf=\"isEditMode\">Text</mat-label>\r\n                    <textarea matInput [formControlName]=\"subControlTextName\" [readonly]=\"!isEditMode\"></textarea>\r\n                </mat-form-field>\r\n                <button mat-fab color=\"none\" (click)=\"onRemoveOption(i)\" *ngIf=\"i>1 && isEditMode\">\r\n                    <mat-icon>delete</mat-icon>\r\n                </button>\r\n            </form>\r\n        </div>\r\n    </ng-container>\r\n</form>\r\n","styles":[".option-container{display:grid;grid-template-columns:60px 1fr .1fr;grid-gap:20px}.top-padded{padding-top:20px}.centered-option{justify-self:stretch;align-self:center}"]}]}],"members":{"formGroup":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":15,"character":5}}]}],"isEditMode":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":16,"character":5}}]}],"onCheckboxClicked":[{"__symbolic":"method"}],"onRemoveOption":[{"__symbolic":"method"}],"onAddOption":[{"__symbolic":"method"}]}},"ɵe":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":4,"character":1},"arguments":[{"declarations":[{"__symbolic":"reference","name":"ɵf"}],"imports":[{"__symbolic":"reference","name":"ɵa"}],"exports":[{"__symbolic":"reference","name":"ɵf"}]}]}],"members":{}},"ɵf":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"selector":"sv-question-freetext","changeDetection":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectionStrategy","line":9,"character":21},"member":"OnPush"},"template":"<form *ngIf=\"formGroup\" [formGroup]=\"formGroup\" class=\"text-container\">\r\n    <mat-form-field appearance=\"outline\">\r\n        <mat-label>Textarea</mat-label>\r\n        <textarea matInput [formControlName]=\"controlName\"></textarea>\r\n    </mat-form-field>\r\n</form>\r\n","styles":[".text-container{display:grid;grid-template-columns:1fr}"]}]}],"members":{"formGroup":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":12,"character":5}}]}]}},"ɵg":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":11,"character":1},"arguments":[{"selector":"sv-survey-question","changeDetection":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectionStrategy","line":15,"character":21},"member":"OnPush"},"template":"<form *ngIf=\"formGroup\" [formGroup]=\"formGroup\" class=\"question-container\">\r\n    <mat-form-field appearance=\"outline\">\r\n        <mat-label>Question Text</mat-label>\r\n        <input matInput [formControlName]=\"textControlName\" [readonly]=\"!isEditMode\">\r\n    </mat-form-field>\r\n    <mat-form-field appearance=\"outline\" [class.hidden]=\"!isEditMode\">\r\n        <mat-label>Question Type</mat-label>\r\n        <mat-select [formControlName]=\"selectControlName\" (valueChange)=\"onSelectChange($event)\">\r\n            <mat-option *ngFor=\"let questionType of questionTypes\" [value]=\"questionType.key\">\r\n                {{questionType.value}}\r\n            </mat-option>\r\n        </mat-select>\r\n    </mat-form-field>\r\n    <div *ngIf=\"!isEditMode\"></div>\r\n    <div *ngIf=\"dataControl\">\r\n        <ng-container *ngIf=\"isSelectTypeFreeText; else questionVariantsComponent\">\r\n            <sv-question-freetext [formGroup]=\"dataControl\"></sv-question-freetext>\r\n        </ng-container>\r\n        <ng-template #questionVariantsComponent>\r\n            <sv-question-variants [formGroup]=\"dataControl\" [isEditMode]=\"isEditMode\"></sv-question-variants>\r\n        </ng-template>\r\n    </div>\r\n</form>\r\n","styles":[".question-container{display:grid;grid-template-columns:1fr .2fr;grid-gap:20px}.hidden{display:none}"]}]}],"members":{"formGroup":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":18,"character":5}}]}],"isEditMode":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":19,"character":5}}]}],"ngOnInit":[{"__symbolic":"method"}],"onSelectChange":[{"__symbolic":"method"}],"ensureDataControl":[{"__symbolic":"method"}],"clearDataControls":[{"__symbolic":"method"}]}}},"origins":{"SurveyModule":"./lib/survey/survey.module","SurveyControlTitle":"./lib/survey/survey.component","SurveyControlQuestions":"./lib/survey/survey.component","SurveyComponent":"./lib/survey/survey.component","Survey":"./lib/survey/survey.types","SurveyForm":"./lib/survey/survey.types","ɵa":"./lib/shared/shared.module","ɵb":"./lib/survey/survey-question/survey-question.module","ɵc":"./lib/survey/survey-question/question-variants/question-variants.module","ɵd":"./lib/survey/survey-question/question-variants/question-variants.component","ɵe":"./lib/survey/survey-question/question-freetext/question-freetext.module","ɵf":"./lib/survey/survey-question/question-freetext/question-freetext.component","ɵg":"./lib/survey/survey-question/survey-question.component"},"importAs":"survey-component-lib"}